/*!
 * numeral.js
 * version : 1.5.3
 * author : Adam Draper
 * license : MIT
 * http://adamwdraper.github.com/Numeral-js/
 */
(function(){/************************************
        Constructors
    ************************************/
// Numeral prototype object
function a(a){this._value=a}/**
     * Implementation of toFixed() that treats floats more like decimals
     *
     * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present
     * problems for accounting- and finance-related software.
     */
function b(a,b,c,d){var e,f,g=Math.pow(10,b);
//roundingFunction = (roundingFunction !== undefined ? roundingFunction : Math.round);
// Multiply up by precision, round accurately, then divide and use native toFixed():
return f=(c(a*g)/g).toFixed(b),d&&(e=new RegExp("0{1,"+d+"}$"),f=f.replace(e,"")),f}/************************************
        Formatting
    ************************************/
// determine what type of formatting we need to do
function c(a,b,c){var d;
// return string
// figure out what kind of format we are dealing with
// currency!!!!!
return d=b.indexOf("$")>-1?e(a,b,c):b.indexOf("%")>-1?f(a,b,c):b.indexOf(":")>-1?g(a,b):j(a._value,b,c)}
// revert to number
function d(a,b){var c,d,e,f,g,i=b,j=["KB","MB","GB","TB","PB","EB","ZB","YB"],k=!1;if(b.indexOf(":")>-1)a._value=h(b);else if(b===r)a._value=0;else{
// see if bytes are there so that we can multiply to the correct number
for("."!==p[q].delimiters.decimal&&(b=b.replace(/\./g,"").replace(p[q].delimiters.decimal,".")),c=new RegExp("[^a-zA-Z]"+p[q].abbreviations.thousand+"(?:\\)|(\\"+p[q].currency.symbol+")?(?:\\))?)?$"),d=new RegExp("[^a-zA-Z]"+p[q].abbreviations.million+"(?:\\)|(\\"+p[q].currency.symbol+")?(?:\\))?)?$"),e=new RegExp("[^a-zA-Z]"+p[q].abbreviations.billion+"(?:\\)|(\\"+p[q].currency.symbol+")?(?:\\))?)?$"),f=new RegExp("[^a-zA-Z]"+p[q].abbreviations.trillion+"(?:\\)|(\\"+p[q].currency.symbol+")?(?:\\))?)?$"),g=0;g<j.length&&!(k=b.indexOf(j[g])>-1?Math.pow(1024,g+1):!1);++g);
// do some math to create our number
a._value=(k?k:1)*(i.match(c)?Math.pow(10,3):1)*(i.match(d)?Math.pow(10,6):1)*(i.match(e)?Math.pow(10,9):1)*(i.match(f)?Math.pow(10,12):1)*(b.indexOf("%")>-1?.01:1)*((b.split("-").length+Math.min(b.split("(").length-1,b.split(")").length-1))%2?1:-1)*Number(b.replace(/[^0-9\.]+/g,"")),
// round if we are talking about bytes
a._value=k?Math.ceil(a._value):a._value}return a._value}function e(a,b,c){var d,e,f=b.indexOf("$"),g=b.indexOf("("),h=b.indexOf("-"),i="";
// check for space before or after currency
// format the number
// position the symbol
// the symbol appears before the "(" or "-"
return b.indexOf(" $")>-1?(i=" ",b=b.replace(" $","")):b.indexOf("$ ")>-1?(i=" ",b=b.replace("$ ","")):b=b.replace("$",""),e=j(a._value,b,c),1>=f?e.indexOf("(")>-1||e.indexOf("-")>-1?(e=e.split(""),d=1,(g>f||h>f)&&(d=0),e.splice(d,0,p[q].currency.symbol+i),e=e.join("")):e=p[q].currency.symbol+i+e:e.indexOf(")")>-1?(e=e.split(""),e.splice(-1,0,i+p[q].currency.symbol),e=e.join("")):e=e+i+p[q].currency.symbol,e}function f(a,b,c){var d,e="",f=100*a._value;
// check for space before %
return b.indexOf(" %")>-1?(e=" ",b=b.replace(" %","")):b=b.replace("%",""),d=j(f,b,c),d.indexOf(")")>-1?(d=d.split(""),d.splice(-1,0,e+"%"),d=d.join("")):d=d+e+"%",d}function g(a){var b=Math.floor(a._value/60/60),c=Math.floor((a._value-60*b*60)/60),d=Math.round(a._value-60*b*60-60*c);return b+":"+(10>c?"0"+c:c)+":"+(10>d?"0"+d:d)}function h(a){var b=a.split(":"),c=0;
// turn hours and minutes into seconds and add them all up
// hours
// minutes
// seconds
// minutes
// seconds
return 3===b.length?(c+=60*Number(b[0])*60,c+=60*Number(b[1]),c+=Number(b[2])):2===b.length&&(c+=60*Number(b[0]),c+=Number(b[1])),Number(c)}function i(a){var b,c,d,e=["B","KB","MB","GB","TB","PB","EB","ZB","YB"],f=e[e.length-1],g=Math.abs(a),h=!1;for(b=0;b<e.length;++b)if(c=Math.pow(1024,b),d=Math.pow(1024,b+1),g>=c&&d>g){h=!0,f=e[b],c>0&&(a/=c);break}
// values greater than or equal to 1024 YB
return h||(a/=Math.pow(1024,e.length-1)),{value:a,suffix:f}}function j(a,c,d){var e,f,g,h,j=!1,k=!1,l=!1,m="",n=!1,// force abbreviation to thousands
o=!1,// force abbreviation to millions
s=!1,// force abbreviation to billions
t=!1,// force abbreviation to trillions
u=!1,// force abbreviation
v="",w="",x=Math.abs(a),y="",z=!1;
// check if number is zero and a custom zero format has been set
// check if number is zero and a custom zero format has been set
// see if we should use parentheses for negative number or if we should prefix with a sign
// if both are present we default to parentheses
// see if abbreviation is wanted
// check if abbreviation is specified
// check for space before abbreviation
// trillion
// billion
// million
// thousand
// see if we are formatting bytes
// check for space before
// see if ordinal is wanted
// check for space before
// format number
return 0===a&&null!==r?r:(c.indexOf("(")>-1?(j=!0,c=c.slice(1,-1)):c.indexOf("+")>-1&&(k=!0,c=c.replace(/\+/g,"")),c.indexOf("a")>-1&&(n=c.indexOf("aK")>=0,o=c.indexOf("aM")>=0,s=c.indexOf("aB")>=0,t=c.indexOf("aT")>=0,u=n||o||s||t,c.indexOf(" a")>-1?(m=" ",c=c.replace(" a","")):c=c.replace("a",""),x>=Math.pow(10,12)&&!u||t?(m+=p[q].abbreviations.trillion,a/=Math.pow(10,12)):x<Math.pow(10,12)&&x>=Math.pow(10,9)&&!u||s?(m+=p[q].abbreviations.billion,a/=Math.pow(10,9)):x<Math.pow(10,9)&&x>=Math.pow(10,6)&&!u||o?(m+=p[q].abbreviations.million,a/=Math.pow(10,6)):(x<Math.pow(10,6)&&x>=Math.pow(10,3)&&!u||n)&&(m+=p[q].abbreviations.thousand,a/=Math.pow(10,3))),c.indexOf("b")>-1&&(c.indexOf(" b")>-1?(v=" ",c=c.replace(" b","")):c=c.replace("b",""),e=i(a),a=e.value,v+=e.suffix),c.indexOf("o")>-1&&(c.indexOf(" o")>-1?(w=" ",c=c.replace(" o","")):c=c.replace("o",""),w+=p[q].ordinal(a)),c.indexOf("[.]")>-1&&(l=!0,c=c.replace("[.]",".")),f=a.toString().split(".")[0],g=c.split(".")[1],h=c.indexOf(","),g?(g.indexOf("[")>-1?(g=g.replace("]",""),g=g.split("["),y=b(a,g[0].length+g[1].length,d,g[1].length)):y=b(a,g.length,d),f=y.split(".")[0],y=y.split(".")[1].length?p[q].delimiters.decimal+y.split(".")[1]:"",l&&0===Number(y.slice(1))&&(y="")):f=b(a,null,d),f.indexOf("-")>-1&&(f=f.slice(1),z=!0),h>-1&&(f=f.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g,"$1"+p[q].delimiters.thousands)),0===c.indexOf(".")&&(f=""),(j&&z?"(":"")+(!j&&z?"-":"")+(!z&&k?"+":"")+f+y+(w?w:"")+(m?m:"")+(v?v:"")+(j&&z?")":""))}/************************************
        Helpers
    ************************************/
function k(a,b){p[a]=b}/**
     * Computes the multiplier necessary to make x >= 1,
     * effectively eliminating miscalculations caused by
     * finite precision.
     */
function l(a){var b=a.toString().split(".");return b.length<2?1:Math.pow(10,b[1].length)}/**
     * Given a variable number of arguments, returns the maximum
     * multiplier that must be used to normalize an operation involving
     * all of them.
     */
function m(){var a=Array.prototype.slice.call(arguments);return a.reduce(function(a,b){var c=l(a),d=l(b);return c>d?c:d},-(1/0))}/************************************
        Constants
    ************************************/
var n,o="1.5.3",
// internal storage for language config files
p={},q="en",r=null,s="0,0",
// check for nodeJS
t="undefined"!=typeof module&&module.exports;n=function(b){return n.isNumeral(b)?b=b.value():0===b||"undefined"==typeof b?b=0:Number(b)||(b=n.fn.unformat(b)),new a(Number(b))},n.version=o,n.isNumeral=function(b){return b instanceof a},n.language=function(a,b){if(!a)return q;if(a&&!b){if(!p[a])throw new Error("Unknown language : "+a);q=a}return!b&&p[a]||k(a,b),n},n.languageData=function(a){if(!a)return p[q];if(!p[a])throw new Error("Unknown language : "+a);return p[a]},n.language("en",{delimiters:{thousands:",",decimal:"."},abbreviations:{thousand:"k",million:"m",billion:"b",trillion:"t"},ordinal:function(a){var b=a%10;return 1===~~(a%100/10)?"th":1===b?"st":2===b?"nd":3===b?"rd":"th"},currency:{symbol:"$"}}),n.zeroFormat=function(a){r="string"==typeof a?a:null},n.defaultFormat=function(a){s="string"==typeof a?a:"0.0"},"function"!=typeof Array.prototype.reduce&&(Array.prototype.reduce=function(a,b){"use strict";if(null===this||"undefined"==typeof this)throw new TypeError("Array.prototype.reduce called on null or undefined");if("function"!=typeof a)throw new TypeError(a+" is not a function");var c,d,e=this.length>>>0,f=!1;for(1<arguments.length&&(d=b,f=!0),c=0;e>c;++c)this.hasOwnProperty(c)&&(f?d=a(d,this[c],c,this):(d=this[c],f=!0));if(!f)throw new TypeError("Reduce of empty array with no initial value");return d}),n.fn=a.prototype={clone:function(){return n(this)},format:function(a,b){return c(this,a?a:s,void 0!==b?b:Math.round)},unformat:function(a){return"[object Number]"===Object.prototype.toString.call(a)?a:d(this,a?a:s)},byteUnits:function(){return i(this._value).suffix},value:function(){return this._value},valueOf:function(){return this._value},set:function(a){return this._value=Number(a),this},add:function(a){function b(a,b,d,e){return a+c*b}var c=m.call(null,this._value,a);return this._value=[this._value,a].reduce(b,0)/c,this},subtract:function(a){function b(a,b,d,e){return a-c*b}var c=m.call(null,this._value,a);return this._value=[a].reduce(b,this._value*c)/c,this},multiply:function(a){function b(a,b,c,d){var e=m(a,b);return a*e*(b*e)/(e*e)}return this._value=[this._value,a].reduce(b,1),this},divide:function(a){function b(a,b,c,d){var e=m(a,b);return a*e/(b*e)}return this._value=[this._value,a].reduce(b),this},difference:function(a){return Math.abs(n(this._value).subtract(a).value())}},t&&(module.exports=n),"undefined"==typeof ender&&(this.numeral=n),"function"==typeof define&&define.amd&&define([],function(){return n})}).call(this);