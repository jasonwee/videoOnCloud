date start : 21 june 2021


5.1 Introduction
---------------------------------------


5.2 Big Picture: Application Releases
---------------------------------------


5.3 Continous Application Deployment
---------------------------------------
Overall, a delivery pipeline consists of two phases:

Continuous Integration (or CI) includes the build, test, and package stages.
Continuous Delivery (or CD) handles the deploy stage.



5.4 Quizzes: Continous Application Deployment
---------------------------------------
1,3,4

1,2,4

3

5.5 The CI Fundamentals
---------------------------------------


5.6 Quizzes: The CI Fundamentals
---------------------------------------
pytest
run pip install -r requirements.txt
docker build -t python-frontend .
docker push pixelpotato/python-frontend:v4.3.8


1,4

2



5.7 Exercise: The CI Fundamentals
---------------------------------------



5.8 Solution: The CI Fundamentals
---------------------------------------

GitHub has a rich library of upstream actions that can be easily integrated with any repository. The suite includes a Build and push Docker images action which uses 3 main components:

login - to logging into DockerHub
setup-buildx - to use an extended Docker CLI build capabilities
setup-qemu - to enable the execution of different multi-architecture containers




# This is a basic workflow to help you get started with Actions

name: Docker Build and Push

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: {{ YOUR_DOCKERHUB_REPOSITORY }}/python-helloworld:latest

5.9
---------------------------------------



5.10
---------------------------------------



5.11
---------------------------------------


5.12
---------------------------------------


5.13
---------------------------------------


5.14
---------------------------------------


5.15
---------------------------------------


5.16
---------------------------------------


5.17
---------------------------------------


5.18
---------------------------------------


5.19
---------------------------------------



5.20
---------------------------------------


5.21
---------------------------------------



