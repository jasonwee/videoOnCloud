date start : 23 october 2021


5.1 Lesson Overview
---------------------------------------
Lesson Outline
Reviewing raw logs would be tedious and time consuming. In this lesson, we'll look at how we can use Grafana to create dashboards that allow us to visualize the data we've been collecting with Prometheus and Jaeger, so that we can see the performance of our system and application at a glance.

Starting with dashboards. First, we'll look at how to set up dashboards with Grafana, and we'll learn the key features of the dashboard UI.
Panels. Next, we'll create panels. These are essentially containers for charts and graphs within our dashboards.
Metrics. Then we will discuss how to use the Prometheus Query Language (PromQL) to track metrics on our cluster, and how to use Jaeger to track metrics on our application.
Edge case: Alternative tools. Finally, we'll look at some alternative tools and learn some of the best practices concerning when we might want to use something other than the Prometheus-Jaeger-Grafana stack for monitoring and observability.



5.2 Starting with Dashboards
---------------------------------------
Starting with Dashboards.
Remember, you can get all of the files you'll need for this and the other exercises in this course from this GitHub Repo.


When setting up Jaeger, we have to create an application and set our deployment to do sidecar injecting. Then we want to port-forward our Grafana service.

In real life, you would likely use NGINX or Istio as a service to expose the service.

NOTE: Your Vagrant machine may have gotten stale. If so, just run vagrant halt and then vagrant up. If vagrant halt fails, it's likely because it was not running.


q1
What is the default HTTP port used to access a Grafana dashboard?
3000


q2
A data source for Jaeger was created in the above video. I needed to point to our Jaeger Query instance. What is the HTTP port and what is the Kubernetes namespace?

(Select two optionsâ€”one for the port and one for the namespace.)
11686
default

Additional Resources
If you would like to learn more about Grafana and why it is the standard, you can check out Grafana's website here.



5.3 Exercise: Starting with Dashboards
---------------------------------------
Exercise: Starting with Dashboards
In your career as an observability expert, you will probably more often need to navigate and modify an existing dashboard than create your own dashboard. So let's get a little practice with looking at some existing dashboards.

For the below quizzes, please refer to this public dashboard provided by CNCF.

These dashboards show you data from CNCF's public GitHub repos. This is a great resource for getting familiar with dashboards.

q1
Locate the dashboard named Companies table. Change the Metric to Commits.

Which company is ranked number one?
Google


q2
Find the Licenses and programming languages dashboard.

Out of the following options, select the two options that use the languages Nix or SaltStack.
kubernetes-sigs/cri-o
kubernetes-retired/kube-mesos-framework


Additional Resources
If you would like to learn more about Grafana JSON templating, you can check out Grafana's website here.



5.4 Panels
---------------------------------------
Grafana offers a wide array of types of graphs and charts that you can visualize. There are also extensions that you can find online to give you other features. I encourage you to play around with everything to familiarize yourself with the usage.

q1
Which of the following is not a graph type supported natively by Grafana?
Pie

q2
If you wanted to plot changes in response time over the course of a month as points on a graph, what panel chart makes the most sense?
line chart


Additional Resources
If you would like to learn more about Grafana Panels, you can check out Grafana's website here.




