date start : 18 august 2021


3.1 Project Overview
---------------------------------------


Project Steps Overview

1. Apply the best development practices and develop the status and health check endpoints for the TechTrends application.
2. Package the TechTrends application by creating a Dockefile and Docker image.
3. Implement the Continuous Integration practices, by using GitHub Actions to automate the build and push of the Docker image to DockerHub.
4. Construct the Kubernetes declarative manifests to deploy TechTrends to a sandbox namespace within a Kubernetes cluster. The cluster should be provisioned using k3s in a vagrant box.
5. Template the Kubernetes manifests using a Helm chart and provide the input configuration files for staging and production environments.
6. Implement the Continuous Delivery practices, by deploying the TechTrends application to staging and production environments using ArgoCD and the Helm chart.

Project Submission
Upon completing the project, you will submit a well-structured zip file that contains your work. As a result, make sure your work is properly structured and saved in your GitHub account.


3.2 Getting Started 
---------------------------------------
https://github.com/udacity/nd064_course_1/tree/main/project/techtrends



3.3 Step 1: Best Practices For Application Deployment
---------------------------------------


3.4 Step 2: Docker for Application Packaging
---------------------------------------


3.5 Step 3: Continuous Integration with GitHub Actions
---------------------------------------


3.6 Step 4: Kubernetes Declarative Manifests
---------------------------------------
$ vagrant up
Bringing machine 'default' up with 'virtualbox' provider...
==> default: Box 'opensuse/Leap-15.2.x86_64' could not be found. Attempting to find and install...
    default: Box Provider: virtualbox
    default: Box Version: >= 0
==> default: Loading metadata for box 'opensuse/Leap-15.2.x86_64'
    default: URL: https://vagrantcloud.com/opensuse/Leap-15.2.x86_64
==> default: Adding box 'opensuse/Leap-15.2.x86_64' (v15.2.31.527) for provider: virtualbox
    default: Downloading: https://vagrantcloud.com/opensuse/boxes/Leap-15.2.x86_64/versions/15.2.31.527/providers/virtualbox.box
Download redirected to host: vagrantcloud-files-production.s3-accelerate.amazonaws.com
==> default: Successfully added box 'opensuse/Leap-15.2.x86_64' (v15.2.31.527) for 'virtualbox'!
==> default: Importing base box 'opensuse/Leap-15.2.x86_64'...
==> default: Generating MAC address for NAT networking...
==> default: Checking if box 'opensuse/Leap-15.2.x86_64' version '15.2.31.527' is up to date...
==> default: Setting the name of the VM: nd064_default_1629382328840_48962
==> default: Clearing any previously set network interfaces...
==> default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: hostonly
==> default: Forwarding ports...
    default: 22 (guest) => 2222 (host) (adapter 1)
==> default: Running 'pre-boot' VM customizations...
==> default: Booting VM...
==> default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Warning: Connection reset. Retrying...
    default: Warning: Remote connection disconnect. Retrying...
    default: Warning: Connection reset. Retrying...
    default: 
    default: Vagrant insecure key detected. Vagrant will automatically replace
    default: this with a newly generated keypair for better security.
    default: 
    default: Inserting generated public key within guest...
    default: Removing insecure key from the guest if it's present...
    default: Key inserted! Disconnecting and reconnecting using new SSH key...
==> default: Machine booted and ready!
==> default: Checking for guest additions in VM...
==> default: Configuring and enabling network interfaces...
==> default: Installing rsync to the VM...
==> default: Rsyncing folder: /home/user/nd064/ => /vagrant


vagrant@localhost:~> curl -sfL https://get.k3s.io | sh -
[INFO]  Finding release for channel stable
[INFO]  Using v1.21.3+k3s1 as release
[INFO]  Downloading hash https://github.com/k3s-io/k3s/releases/download/v1.21.3+k3s1/sha256sum-amd64.txt
[INFO]  Downloading binary https://github.com/k3s-io/k3s/releases/download/v1.21.3+k3s1/k3s
[INFO]  Verifying binary download
[INFO]  Installing k3s to /usr/local/bin/k3s
[INFO]  Creating /usr/local/bin/kubectl symlink to k3s
[INFO]  Creating /usr/local/bin/crictl symlink to k3s
[INFO]  Creating /usr/local/bin/ctr symlink to k3s
[INFO]  Creating killall script /usr/local/bin/k3s-killall.sh
[INFO]  Creating uninstall script /usr/local/bin/k3s-uninstall.sh
[INFO]  env: Creating environment file /etc/systemd/system/k3s.service.env
[INFO]  systemd: Creating service file /etc/systemd/system/k3s.service
[INFO]  systemd: Enabling k3s unit
Created symlink /etc/systemd/system/multi-user.target.wants/k3s.service â†’ /etc/systemd/system/k3s.service.
[INFO]  systemd: Starting k3s
vagrant@localhost:~> k3s kubectl get node
WARN[2021-08-19T14:16:47.979218341Z] Unable to read /etc/rancher/k3s/k3s.yaml, please start server with --write-kubeconfig-mode to modify kube config permissions 
error: error loading config file "/etc/rancher/k3s/k3s.yaml": open /etc/rancher/k3s/k3s.yaml: permission denied
vagrant@localhost:~> sudo su -
localhost:~ # k3s kubectl get node
NAME        STATUS   ROLES                  AGE   VERSION
localhost   Ready    control-plane,master   47s   v1.21.3+k3s1
localhost:~ # 



3.7 Step 5: Helm Charts
---------------------------------------


3.8 Step 6: Continous Delivery with ArgoCD
---------------------------------------


3.9 Standout Suggestions (Optional)
---------------------------------------


3.10 Project: Project: TechTrends
---------------------------------------


