date start : 15 november 2021


3.1 Introduction
---------------------------------------
In this lesson, we will focus on verifying the security of a Docker configuration with an open-source tool called Docker-bench, as you would during the build phase of the SDLC. Once verified, we will deploy the image to Docker Hub.

Note: In this lesson, we will test the list of possible threats we established with STRIDE and confirm which threats actually exist by running Docker-bench.



3.2 Lesson Overview
---------------------------------------
In this lesson, we will cover the following topics:

Refresh on Docker attack surfaces from the previous lesson
Evaluate Docker process isolation
Inspect an image with Docker-bench to evaluate attack surface hands-on, identify threats and compare them to our threat model
Sign the image using Docker content trust and commit the hardened Docker image to Docker Hub



3.3 Docker Attack Surface
---------------------------------------
Refresher on Docker Attack Surface
What can go wrong? Let's examine this question for the three top-level groups - Docker client, Docker host, and Docker registry.

Docker client: We are most concerned with the compromise of the Docker desktop running on the administrator's machine, abuse of the client's authorization to make privileged changes, and how the Dockerfile is built.
Docker host also has a large attack surface - we are most concerned with namespace isolation to prevent container escape attacks, insecure defaults, and misconfiguration.
Docker registry likely has the largest attack surface with the most external implications. Here we are concerned with image security, Open-Source Software (OSS) security, and Docker registry security.
Next, letâ€™s take review each top concern (client compromise, isolation tampering, and image security) in more detail.

Further Reading
Research findings from Google's Project Zero security research team.




