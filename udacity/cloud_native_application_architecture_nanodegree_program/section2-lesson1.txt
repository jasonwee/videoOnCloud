date start : 23 august 2021


2.1 Meet Your Instructor
---------------------------------------
Summary
Welcome to the Microservice Fundamentals course! My name is Katie Gamanji, and I will be your instructor.

In this course, we will learn how to construct a CI/CD pipeline that will containerize an application and deployed it to a Kubernetes cluster.

I have been working as a cloud platform engineer for many years. In these roles, I built and maintained platforms that would enable developers to deploy and host their applications. This revolves around a high degree of automation, upskilling, and constant iterations on user feedback.

In my current role, I am working for CNCF ( Cloud Native Computing Foundation) as Ecosystem Advocate, representing and growing the End User Community. Also, I am a member of the advisory board for Keptn, which currently is a sandbox CNCF project.


2.2 Prerequisites
---------------------------------------
Summary
For this course, students should be comfortable with:

web application development with Python
using the CLI or command-line interface
using git commands
creating a DockerHub account
These pre-requisites will be used throughout the course. Make sure you have them installed to closely follow the demos and exercise solutions.



2.3 Course Outline
---------------------------------------
Summary
Throughout the course, we will walk through a realistic example of applying good development practices and containerizing an application, before it's released to a Kubernetes cluster using an automated CI/CD pipeline.

This course has the following lessons:

Welcome
Architecture Considerations
Container Orchestration
Open Source PaaS
Cloud Native CI/CD
In the first lesson, we will cover:

Introduction to Cloud Native
CNCF and Cloud Native tooling
Stakeholders
Tools, Environment & Dependencies


2.4 Introduction to Cloud-Native
---------------------------------------
Summary
Cloud-native refers to the set of practices that empowers an organization to build and manage applications at scale. They can achieve this goal by using private, hybrid, or public cloud providers. In addition to scale, an organization needs to be agile in integrating customer feedback and adapting to the surrounding technology ecosystem.

Containers are closely associated with cloud-native terminology. Containers are used to run a single application with all required dependencies. The main characteristics of containers are easy to manage, deploy, and fast to recover. As such, often, a microservice-based architecture is chosen in tandem with cloud-native tooling. Microservices are used to manage and configure a collection of small, independent services that can be easily packaged and executed within a container.



2.5 
---------------------------------------





2.6 
---------------------------------------




2.7 
---------------------------------------



2.8 
---------------------------------------




2.9 
---------------------------------------


2.10 
---------------------------------------



2.11 
---------------------------------------


2.12 
---------------------------------------


