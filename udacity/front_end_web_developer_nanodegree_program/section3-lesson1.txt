

3.1.1 Harmony, ES6, ES2015...
---------------------------------------

Welcome to the course on ES6! We're glad you're here! ðŸ‘‹

This course is all about the new changes brought to the JavaScript programming language. It will be beneficial if you are familiar with JavaScript and its programming constructs. If you're new to the JavaScript language or would like a refresher, check out our Intro to JavaScript course.

Follow us!

@parkesrjames
@richardkalehoff


3.1.2 let and Const
---------------------------------------
Let and Const
There are now two new ways to declare variables in JavaScript: let and const.

Up until now, the only way to declare a variable in JavaScript was to use the keyword var. To understand why let and const were added, itâ€™s probably best to look at an example of when using var can get us into trouble.

Take a look at the following code.

Quiz Question
ï¿¼
What do you expect to be the output from running getClothing(false)?

function getClothing(isCold) {
  if (isCold) {
    var freezing = 'Grab a jacket!';
  } else {
    var hot = 'Itâ€™s a shorts kind of day.';
    console.log(freezing);
  }
}

undefined

let and const
Variables declared with let and const eliminate this specific issue of hoisting because theyâ€™re scoped to the block, not to the function. Previously, when you used var, variables were either scoped globally or locally to an entire function scope.

If a variable is declared using let or const inside a block of code (denoted by curly braces { }), then the variable is stuck in what is known as the temporal dead zone until the variableâ€™s declaration is processed. This behavior prevents variables from being accessed only until after theyâ€™ve been declared.

Quiz Question
ï¿¼
What do you expect to be the output from running getClothing(false)?

function getClothing(isCold) {
  if (isCold) {
    const freezing = 'Grab a jacket!';
  } else {
    const hot = 'Itâ€™s a shorts kind of day.';
    console.log(freezing);
  }
}

ReferenceError: freezing is not defined

Rules for using let and const
let and const also have some other interesting properties.

Variables declared with let can be reassigned, but canâ€™t be redeclared in the same scope.
Variables declared with const must be assigned an initial value, but canâ€™t be redeclared in the same scope, and canâ€™t be reassigned.

Quiz Question
ï¿¼
What do you expect to be output from running the following code?

let instructor = 'James';
instructor = 'Richard';
console.log(instructor);

Quiz Question
ï¿¼
What do you expect to be output from running the following code?

let instructor = 'James';
instructor = 'Richard';
console.log(instructor);

Richard

Use cases
The big question is when should you use let and const? The general rule of thumb is as follows:

* use let when you plan to reassign new values to a variable, and
* use const when you donâ€™t plan on reassigning new values to a variable.

Since const is the strictest way to declare a variable, we suggest that you always declare variables with const because it'll make your code easier to reason about since you know the identifiers won't change throughout the lifetime of your program. If you find that you need to update a variable or change it, then go back and switch it from const to let.

Thatâ€™s pretty straightforward, right? But what about var?

What about var?
Is there any reason to use var anymore? Not really.

There are some arguments that can be made for using var in situations where you want to globally define variables, but this is often considered bad practice and should be avoided. From now on, we suggest ditching var in place of using let and const.



3.1.3 Quiz: Using Let and Const (1-1)
---------------------------------------



3.1.4 Template Literals
---------------------------------------


3.1.5 Quiz: Build an HTML Fragment (1-2)
---------------------------------------


3.1.6 Destructuring
---------------------------------------



3.1.7 Quiz: Destructuring Arrays (1-3)
---------------------------------------



3.1.8 Object Literal Shorthand
---------------------------------------



3.1.9 Lesson 1 Checkup
---------------------------------------



3.1.10 Iteration
---------------------------------------


3.1.11 Family of For Loops
---------------------------------------


3.1.12 For ...of Loop
---------------------------------------


3.1.13 Quiz: Writing a For...of Loop (1-4)
---------------------------------------



3.1.14 Spread... Operator
---------------------------------------


3.1.15 ...Rest Parameter
---------------------------------------


3.1.16 Quiz: Using the Rest Parameter (1-5)
---------------------------------------


3.1.17 Lesson 1 Summary
---------------------------------------

















